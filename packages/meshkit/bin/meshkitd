#!/bin/bash

CONF=/etc/meshkit/meshkit.conf

[ "${DEBUG}" = "" ] && DEBUG=0
[ ${DEBUG} = 1 ] && set -x

function log {
	[ ${DEBUG} = 1 ] && echo $*
	while [[ "$1" != "" ]] &&  [[ $1 == -* ]]; do
		shift 1
	done
	logger "meshkitd:" $*
}

function die {
	log ${*}
	iw dev mesh0 del &> /dev/null
	exit -1
}

function try {
	if [ ${DEBUG} = 1 ]; then
		log $*
		eval $*
		RESULT=$?
	else
		eval $* &> /dev/null
		RESULT=$?
	fi
	if [ ! ${RESULT} -eq 0 ]; then
		log "Failed (${RESULT}).  Trying again in 5s"
		sleep 5
		return 1
	else
		log "Success"
		return 0
	fi
}

# add count $2 to base IP address $1
function increment_ip {
	SUFFIX=$((`echo ${1} | cut -d '.' -f 4` + ${2}))
	NEW_IP=`echo ${1} | cut -d '.' -f 1-3`".${SUFFIX}"
	echo ${NEW_IP}
}

[ -e ${CONF} ] || die "Config file ${CONF} does not exist"

source ${CONF}

# Calculate updated IP addresses if configured to do so
REAL_MESH_IP=${MESH_IP}
REAL_CTL_IP=${CTL_IP}

if [ -e /etc/distro11s.conf -a -e /etc/distro11s-hostnumber ]; then
	source /etc/distro11s.conf
	if [ ${DISTRO11S_AUTO_INCREMENT_INSTALLER} -eq 1 ]; then
		HOSTNUM=`cat /etc/distro11s-hostnumber`
		if [ "${MESH_IP}" != "" ]; then
			REAL_MESH_IP=`increment_ip ${MESH_IP} ${HOSTNUM}`
		fi
		if [ "${CTL_IP}" != "" ]; then
			REAL_CTL_IP=`increment_ip ${CTL_IP} ${HOSTNUM}`
		fi
	fi
fi

if [ "${MESH_IF}" != "" ]; then
	log -n "Starting mesh on ${MESH_IF}..."

	ifconfig -a | grep mesh0 &> /dev/null && iw dev mesh0 del &> /dev/null

	ifconfig -a | grep ${MESH_IF} &> /dev/null || die "No such iface ${MESH_IF}"

	iw dev ${MESH_IF} interface add mesh0 type mesh || die "Failed to add mesh interface"
	iw dev mesh0 set channel ${MESH_CHANNEL} || die "Failed to change to mesh channel"
	# For now, we just support static IP
	ifconfig mesh0 ${REAL_MESH_IP} || die "Failed to bring up mesh interface"
	iw dev mesh0 mesh join ${MESH_ID} || die "Failed to join mesh"
	log "Success"
fi

if [ "${CTL_IF}" != "" ]; then

	ifconfig -a | grep ${CTL_IF} &> /dev/null || die "No such iface ${CTL_IF}"

	# Try over and over to bring up the control interface.
	ifconfig ${CTL_IF} down || die "Failed to bring down control iface"

	while true; do

		log -n "Bringing up control interface ${CTL_IF}..."
		try "ifconfig ${CTL_IF} up" || continue

		if [ "${CTL_SSID}" != "" ]; then
			while true; do
				log -n "Scanning for control network ${CTL_SSID}..."
				try "iw dev ${CTL_IF} scan | grep -e '[[:space:]]*SSID: '${CTL_SSID}'$'" || continue
				break;
			done

			log -n "Connecting to control network ${CTL_SSID}..."
			try iw ${CTL_IF} connect ${CTL_SSID} || continue
			COUNT=20
			while [ ${COUNT} -gt 0 ]; do
				STATUS=`iw wlan1 link | head -1 | awk '{print $1}'`
				if [ "${STATUS}" = "Connected" ]; then
					break;
				fi
				COUNT=$((${COUNT} - 1))
				sleep 1
			done
			if [ ! ${COUNT} -gt 0 ]; then
				log "Failed to connect to ${CTL_SSID}.  Trying again in 5s."
				sleep 5
				continue
			fi
		fi

		# Set the IP address for the ctl interface
		if [ "${REAL_CTL_IP}" = "" ]; then
			log "DHCP unsupported at this time."
			exit 1
		else
			log -n "Assigning IP address..."
			try ifconfig ${CTL_IF} ${REAL_CTL_IP} || continue
		fi

		# If we actually make it all the way to the end, we're connected.  Now
		# we poll to ensure that we stay connected.
		while true; do
			STATUS=`iw wlan1 link | head -1 | awk '{print $1}'`
			if [ "${STATUS}" != "Connected" ]; then
				log "Lost control link.  Re connecting."
				break
			fi
			sleep 5
		done
	done
fi
